import time

from selenium.common import NoSuchElementException
from selenium.webdriver.common.by import By

from constants import MIDDLE_RANDOM
from gateways import DriverGateway
from models import Character
from logger import log




class CharacterManager:
    def __init__(self, character: Character, driver_gw: DriverGateway):
        self.character = character
        self.driver_gw = driver_gw

    def update_character_info(self):
        log.debug('–û–±–Ω–æ–≤–ª—è—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.')

        self.driver_gw.refresh()

        hp_span = self.driver_gw.find_element(By.XPATH, "//img[@src='img/hp.png']/following::*[2]")
        mp_span = self.driver_gw.find_element(By.XPATH, "//img[@src='img/ma.png']/following::*[2]")
        trauma_img = self.driver_gw.find_element(By.XPATH, "//img[@src='img/aid.gif']")
        trauma = self.driver_gw.execute_script(
            "return arguments[0].nextSibling.textContent;",
            trauma_img
        ).strip()

        self.character.hp = int(hp_span.text.split('/')[0])
        self.character.max_hp = int(hp_span.text.split('/')[1])
        self.character.mp = int(mp_span.text.split('/')[0])
        self.character.max_mp = int(mp_span.text.split('/')[1])
        self.character.is_exists_trauma = True if trauma != '–ù–µ—Ç' else False

        log.info(str(self.character))

    def find_battle(self):
        log.debug('–ü–æ–∏—Å–∫ –±–∏—Ç–≤—ã...')
        if self.driver_gw.check_url_path('/wap/boj.php'):
            log.warning('–ü–µ—Ä—Å–æ–Ω–∞–∂ –≤ –±–æ—é! üò±')
            try:
                while True:
                    self.driver_gw.button_click('bitvraga')
                    log.info('–£–¥–∞—Ä!')

            except NoSuchElementException:
                log.info('–ë–æ–π –æ–∫–æ–Ω—á–µ–Ω.')

                if self.driver_gw.check_url_path('/wap/wait.php'):
                    log.debug('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –±–æ—è –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø–æ–¥–æ–∂–¥–µ–º...')
                    self.driver_gw.refresh()
                    time.sleep(MIDDLE_RANDOM)

                if self.driver_gw.check_url_path('/wap/logfull.php'):
                    log.debug('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–æ—è –≥–æ—Ç–æ–≤—ã. –ü–µ—Ä–µ–π–¥–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫.')
                    self.driver_gw.link_click_by_href('game.php')
                    self.update_character_info()

                    if not self.character.is_healthy():
                        log.info('–ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ—Ç–µ—Ä—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–æ—Ä–æ–¥.')
                        self.driver_gw.link_click_by_href('teleport.php')

    def to_game_page(self):
        log.info('–ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ.')
        self.driver_gw.link_click_by_href('game.php')
        self.find_battle()

    def check_main_page(self):
        if self.driver_gw.check_url_path('/wap/main.php'):
            self.to_game_page()

    def check_game_page(self):
        if self.driver_gw.check_url_path('/wap/game.php'):
            self.update_character_info()

            while not self.character.is_healthy():
                if self.character.is_exists_trauma:
                    log.info('–ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–ª—É—á–∏–ª —Ç—Ä–∞–≤–º—É, –∏–¥–µ–º –ª–µ—á–∏—Ç—å—Å—è.')
                    self.driver_gw.link_click_by_href('main.php')
                    self.driver_gw.link_click_by_href('gorod.php')
                    self.driver_gw.link_click_by_href('arena.php')
                    self.driver_gw.link_click_by_href('arena_travma.php')
                    self.driver_gw.link_click_by_href('main.php')
                    self.driver_gw.link_click_by_href('game.php')
                    log.info('–õ–µ—á–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ.')

                time.sleep(MIDDLE_RANDOM)
                self.update_character_info()
            else:
                self.driver_gw.link_click_by_href('main.php')

                self.find_battle()

                try:
                    self.driver_gw.link_click_by_href('gorod.php')
                    self.driver_gw.link_click_by_href('teritory.php')
                except NoSuchElementException:
                    self.driver_gw.link_click_by_href('teritory.php')
                finally:
                    log.info('–í—ã—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É.')
                    self.find_battle()

                    if self.driver_gw.get_current_square_id() == 'r394':
                        self.go_to_forest()

    def check_city_page(self):
        if self.driver_gw.check_url_path('/wap/gorod.php'):
            if self.character.is_healthy():
                log.info('–í—ã—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É.')
                self.driver_gw.link_click_by_href('teritory.php')

                if self.driver_gw.get_current_square_id() == 'r394':
                    self.go_to_forest()
            else:
                self.to_game_page()

    def go_to_forest(self):
        self.find_battle()
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r395.')
        self.driver_gw.link_click_by_id('r395')
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r431.')
        self.driver_gw.link_click_by_id('r431')
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r467.')
        self.driver_gw.link_click_by_id('r467')
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r503.')
        self.driver_gw.link_click_by_id('r503')
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r504.')
        self.driver_gw.link_click_by_id('r504')
        log.info('–®–∞–≥–∞–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É r470.')
        self.driver_gw.link_click_by_id('r470')
